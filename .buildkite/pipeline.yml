env:
  GITHUB_REPO: "lcarneirofreitas/buildkite-test"
  DEV_ACCOUNT: "1234567890"
  PROD_ACCOUNT: "0987654321"

steps:

  # Step 1: Recupera o secret e verifica a Label no PR
  - label: "Verificando Label no PR"
    key: check-label
      command: |
        GITHUB_TOKEN=$(buildkite-agent secret get GITHUB_TOKEN)
        echo "Verificando labels do PR #${BUILDKITE_PULL_REQUEST:-0}..."

        curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_REPO/issues/$BUILDKITE_PULL_REQUEST/labels" > /tmp/response.json
        status=$?

        if [[ $status != 0 ]]; then
          echo "Erro na requisição da API do GitHub (código $status)."
          cat /tmp/response.json
          exit 1
        fi

        RESPONSE=$(cat /tmp/response.json)
        echo "Resposta da API do GitHub (completa): $RESPONSE" | jq .

        if [[ -z "$RESPONSE" ]]; then
          echo "Erro: Resposta da API do GitHub vazia."
          exit 1
        fi

        LABELS=$(echo "$RESPONSE" | jq -r '.[].name // ""' | tr '\n' ' ')
        echo "Labels encontradas: $LABELS"

        if echo "$LABELS" | grep -qw "dev"; then
          export BUILDKITE_TRIGGER_ENV="dev"
        elif echo "$LABELS" | grep -qw "production"; then
          export BUILDKITE_TRIGGER_ENV="production"
        else
          echo "Nenhuma label válida encontrada. Cancelando build."
          buildkite-agent annotate "Pipeline cancelado: Nenhuma label válida encontrada." --style "error"
          exit 1
        fi
      agents:
      queue: "default"

  - wait

  # Step 2: Build e Testes
  - label: "Build & Test"
    key: build-test
    depends_on: check-label
    command: |
      echo "Rodando build..."
      echo "Executando testes..."
      sleep 5
      echo "Build e testes finalizados com sucesso!"
    agents:
      queue: "default"

  - wait

  # Step 3: Deploy em Dev (Executa apenas se for dev)
  - label: "Deploy em Dev"
    key: deploy-dev
    depends_on: build-test
    command: |
      if [[ "$BUILDKITE_TRIGGER_ENV" == "dev" ]]; then # A variável estará disponível aqui!
        echo "Iniciando deploy em Dev..."
        sleep 5
        echo "Deploy em Dev finalizado!"
      else
        echo "Skipping deploy para Dev"
        exit 0
      fi
    agents:
      queue: "default"

  - wait

  # Step 4: Aprovação para Deploy em Produção
  - input: "Aprovar Deploy em Produção?"
    key: approve-prod
    depends_on:
      - build-test
    prompt: "Deseja implantar a versão em Produção?"

  - wait

  # Step 5: Deploy em Produção (Se aprovado)
  - label: "Deploy em Produção"
    key: deploy-prod
    depends_on:
      - approve-prod
    command: |
      if [[ "$BUILDKITE_TRIGGER_ENV" == "production" ]]; then # A variável estará disponível aqui!
        echo "Iniciando deploy em Produção..."
        sleep 5
        echo "Deploy em Produção finalizado!"
      else
        echo "Skipping deploy para Produção"
        exit 0
      fi
    agents:
      queue: "default"